<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
   <title>BeiYuu.com</title>
   <link href="http://beiyuu.com/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="http://beiyuu.com" rel="alternate" type="text/html" />
   <updated>2013-05-12T10:58:40+08:00</updated>
   <id>http://beiyuu.com</id>
   <author>
     <name>BeiYuu</name>
     <email></email>
   </author>

   
   <entry>
     <title>听雨</title>
     <link href="http://beiyuu.com/raining-in-chrome"/>
     <updated>2012-04-18T00:00:00+08:00</updated>
     <id>http://beiyuu.com/raining-in-chrome</id>
     <content type="html">&lt;h1&gt;&lt;a href=&quot;/raining-in-chrome&quot; title=&quot;听雨&quot;&gt;听雨&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;2012-04-18 By &lt;a href=&quot;http://beiyuu.com/about&quot;&gt;BeiYuu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;之前直接下载.crx文件的童鞋，现在可以把原来的卸载，直接在Chrome Web Store中下载了，地址：&lt;a href=&quot;https://chrome.google.com/webstore/detail/fkakmejoechmicbecchienoapbakancc&quot;&gt;It's Raining&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;来京快两年了，撑伞的次数屈指可数，有时候也会在心里暗暗后怕，是帝都的蓝天硬生生战胜了抑郁。&lt;/p&gt;

&lt;p&gt;京城令人发指的秋天，蓝的清透，顶着这样的天，要是心底再泛起所谓的忧郁，自己都会鄙视自己。时常也会怀念连绵的阴雨，天色阴暗、空气清新、雨声滴答，单纯而静谧，就算假装想想心事也很有情调。&lt;/p&gt;

&lt;p&gt;不得不说，有时候只是听着雨声，也能换个心情，也能专注起来。&lt;/p&gt;

&lt;p&gt;近来对Chrome插件有点兴趣，又看到&lt;a href=&quot;http://www.rainymood.com&quot; title=&quot;Rainy Mood&quot;&gt;RainyMood&lt;/a&gt;，就试试写一个这样调整气氛心情的插件。Chrome的插件开发体验很棒，待整理下再发博客。另外感谢&lt;a href=&quot;http://www.softicons.com/free-icons/web-icons/vector-stylish-weather-icons-by-bartosz-kaszubowski/cloud-dark-rain-icon&quot;&gt;softicons&lt;/a&gt;提供漂亮的图标。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://movie.douban.com/subject/7054120/&quot; title=&quot;黑镜&quot;&gt;Black Mirror&lt;/a&gt;最近很火，豆瓣评分也非常高。我看完的时候，心中的赞叹感让我觉得应该写篇影评骂一骂，影评还没写，却发现我经常会想起里面的情景，所以我不得不低头承认，他确实拍的有那么一点深刻了。&lt;/p&gt;

&lt;p&gt;美剧有时候看起来很右派，要完美，即使不完美，那一定得是感动。英剧显然就是2B青年的套路。现实有多2B，他就有多现实。把Black Mirror的每一集总结一下就是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1、我就是单纯要搞你，你看着办吧。&lt;/li&gt;
&lt;li&gt;2、这就是未来。&lt;/li&gt;
&lt;li&gt;3、科技让欺骗无处遁形，很好。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;未来是现世一步步发展过去的。记得之前有一个问题：如果用电流刺激你的大脑，让你得到与真实环境刺激一样的神经感受，那么这到底算什么呢。我相信，总有一天技术会达到，但是现在离那也不遥远，互联网就在做这样的事情，我的这个小插件也是做同样的事情，你说这是杯具呢还是悲剧呢？&lt;/p&gt;

&lt;p&gt;想体验，就点&lt;a href=&quot;https://chrome.google.com/webstore/detail/fkakmejoechmicbecchienoapbakancc&quot;&gt;这里&lt;/a&gt;下载吧，只支持&lt;a href=&quot;https://www.google.com/chrome&quot;&gt;Chrome&lt;/a&gt;浏览器哦！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/rainingchrome/rain.jpg&quot; alt=&quot;Raining&quot; /&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>如何选择与购买吉他</title>
     <link href="http://beiyuu.com/buy-guitar"/>
     <updated>2012-03-26T00:00:00+08:00</updated>
     <id>http://beiyuu.com/buy-guitar</id>
     <content type="html">&lt;h1&gt;&lt;a href=&quot;/buy-guitar&quot; title=&quot;如何选择与购买吉他&quot;&gt;如何选择与购买吉他&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;2012-03-26 By &lt;a href=&quot;http://beiyuu.com/about&quot;&gt;BeiYuu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/guitarmaterial/joesatriani.jpg&quot; alt=&quot;Joe Satriani&quot; /&gt;&lt;/p&gt;

&lt;p&gt;吉他是一个人见人爱的乐器，大都认为吉他门槛低、空间大，可以练习两周就能唱给心爱的人，也可以像&lt;a href=&quot;http://www.satriani.com/&quot; title=&quot;Joe Satriani&quot;&gt;老乔&lt;/a&gt;那样钻研几十年，依然有兴奋点。学习一个新鲜的玩意，必须有强烈的兴趣支持，才有动力坚持，才有大的提高，听听大师们的作品不失为最简单的一个办法。我在知乎回答过&lt;a href=&quot;http://www.zhihu.com/question/19557418&quot;&gt;你心目当中最牛的吉他手是谁，他有什么特点，你最喜欢他的一支作品是？&lt;/a&gt;这个问题，不知道对你是否有用。这篇博客不是讨论如何学习吉他，而是对之前我学习的关于吉他木材的一点总结，不可否认，吉他的优劣会严重影响到学琴弹琴的感受，所以我觉得，还是有必要写一写。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;我不是吉他高手，也不是植物学专家，以下总结大都是捕风捉影和一点点自己的实践，必定会漏洞百出。分享内容有用的多过谬误的，就算我没有白费劲了，恳请您指出文中错误之处，我必定立即修改纠正。&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;吉他的一些基本认识&lt;/h2&gt;

&lt;p&gt;吉他的种类大体可分为古典吉他、民谣吉他、电吉他、佛拉门戈吉他、夏威夷吉他等等。这里我们只讨论民谣吉他这个最普遍的分类的一些基本知识。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/guitarmaterial/cate.jpg&quot; alt=&quot;Guitar Category&quot; /&gt;&lt;/p&gt;

&lt;p&gt;对于民谣吉他来说，前后两块木板几乎就是他的全部，以这两块木板来给吉他分级再合适不过了。最低端的，所谓的入门琴就是前后两块板都是&lt;strong&gt;合板&lt;/strong&gt;，什么是合板，就是使用切割木材剩余的废料压制而成的板材，俗名三合板，那种松软脆弱的模样，做出来的吉他品质也就可想而知了，做吉他又不是做家具。经常这种合板吉他会被称为“练习琴”，这种琴其实拿来练习，对于初学者的打击会非常大，音质差，手感疼，并不建议购买使用。&lt;/p&gt;

&lt;p&gt;比合板好一些的就是&lt;strong&gt;单板吉他&lt;/strong&gt;，单板一般都是正面采用整片木材切割拼合而成，对于音色有很大的改善，共鸣也足了很多，如果再是一些大品牌的做工，手感上也会大为改善，再如果人品很足，也有可能遇到极品，就像我听到有人15块就可以买到千元级品质的笛子的故事一样。如果你是真心想学习吉他，建议从这个档次的琴买起。你不需要一个玩具，你需要的是一把真正的吉他。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/guitarmaterial/koaguitars.jpg&quot; alt=&quot;KOA&quot; /&gt;&lt;/p&gt;

&lt;p&gt;更好一些的当然就是&lt;strong&gt;全单板的吉他&lt;/strong&gt;了，面板、背板、侧板均为实木制作，这样的用料之下，音色就完美动听了很多，声音更加自然悦耳。全单琴的制作对于工艺要求很高，对于制作环境的湿度和温度也有很高的要求，侧板需要长时间的定型，所以这样的琴产量都很低，也最能发挥木材的特质，价格自然也不便宜。如果手头比较宽裕，或者打算换一把更优质的吉他，全单无疑是最佳的选择，但是对于鱼龙混杂的市场来说，也许1000多快就可以号称是全单，也许你花5000也只能买到某品牌的面单，这些都是让购买者困惑的事情，如何分辨挑选我们后面会讨论。&lt;/p&gt;

&lt;h2&gt;如何识别合板和单板吉他&lt;/h2&gt;

&lt;p&gt;对于购买者来说，识货需要一定的练习，不光是用眼看，更多的其实是用耳朵，眼睛看到的不一定是真的，灵敏的耳朵才是真正的辨别好货的利器。也可能就是300块的合板琴，却机缘巧合达到了2000块单板的音质，你的耳朵发现了他，也算是个小小的成就了。&lt;/p&gt;

&lt;p&gt;因为合板与单板吉他的选材问题，所以在没有做过其他手脚的情况下，面板的材料根据眼睛就能很容易的区别开来。我们来看两张图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/guitarmaterial/mixedpiece.jpg&quot; alt=&quot;合板吉他&quot; /&gt;
&lt;img src=&quot;/images/guitarmaterial/onepiece.jpg&quot; alt=&quot;单板吉他&quot; /&gt;&lt;/p&gt;

&lt;p&gt;根据上面两张图，很容易就可以区分开来，观察音孔的边缘，单板的木纹自然的延伸到琴体内部，而合板的就明显的分层。这是面板的观察方法。&lt;/p&gt;

&lt;p&gt;对于背侧板是否单板来说，判断起来就会困难一些，普通的办法是先观察背板的木材纹路，然后通过音孔看同样位置的木材纹路，如果是单板，正反面的纹路肯定是吻合的。但是这也不是完全保险的办法，也可能遇到正反都贴了木皮的情况，这种情况如果只靠眼睛观察，就很容易被欺骗。&lt;/p&gt;

&lt;p&gt;另外还有一种方法是靠嗅觉，去闻木材的香味，这个对于低端琴和入门者来说难度太大，被欺骗的可能性也会更高，就不做讨论了。&lt;/p&gt;

&lt;p&gt;我还是要啰嗦一下，无论材质怎样怎样，材质也不是吉他音质的全部，好的材料也只有在好的工艺之下，才能发挥它的真正价值，你需要更多的练习是耳朵的辨别能力，合板吉他如何都不会好过单板的音质，面单和全单之中鱼龙混杂，全单音质也不一定就强过面单。下面这个音频是某网友自己录制的，每一小段乐曲都用两把琴演奏，一把是全单，一把是面单，看看你能听出来哪个是全单吗？&lt;/p&gt;

&lt;table align=&quot;center&quot; style=&quot;margin-bottom:30px;&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;embed src=&quot;http://www.tudou.com/v/Itc0aUqqnB0/&amp;resourceId=0_05_02_99/v.swf&quot; type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; align=&quot;middle&quot; allowfullscreen=&quot;true&quot; wmode=&quot;opaque&quot; width=&quot;480&quot; height=&quot;400&quot;&gt;&lt;/embed&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;


&lt;p&gt;听完了有了自己的结论了吗，这里查看答案：&lt;a href=&quot;http://bbs.guitarchina.com/thread-1214288-1-1.html&quot;&gt;同品牌吉他面单和全单声音比较&lt;/a&gt;。也可Ctrl+A查看答案。&lt;/p&gt;

&lt;div style=&quot;color:white;margin-bottom:20px;&quot;&gt;第一把是面单，第二把是全单&lt;/div&gt;


&lt;p&gt;论坛上也有一篇说的比较全面的的文章：&lt;a href=&quot;http://bbs.guitarchina.com/viewthread.php?tid=499813&quot;&gt;如何判定吉他是不是全实木单板&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;关于木材的一些有趣的知识&lt;/h2&gt;

&lt;p&gt;一把好吉他，跟选材的优劣是分不开的，能选为吉他材料的木头并不是很多，我们做一些简单的了解。&lt;/p&gt;

&lt;h3&gt;云松(Spruce)和雪松(Cedar)&lt;/h3&gt;

&lt;p&gt;这是两种比较常用在面板的材料，他们两个也有比较明显的特色，云松木纹偏大、音色明亮，层次很丰富，即使在多重的声音之中也能很明显的突出来。而雪松相对就比较温暖一些，声音比较发散，会有浪漫的感觉，在拉丁风格中的曲目使用会更有优势一些。&lt;/p&gt;

&lt;h3&gt;夏威夷洋槐(KOA)&lt;/h3&gt;

&lt;p&gt;KOA是一种看起来非常华丽的木材，音色也非常亮丽，但是上好的夏威夷洋槐很难找到了，所以此类吉他市面上也不常见，可以看看图片，非常漂亮。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/guitarmaterial/KOA.jpg&quot; alt=&quot;KOA&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;桃花心木(Mahogany)和枫木(Maple)&lt;/h3&gt;

&lt;p&gt;这两种木材的使用并不算普遍，桃花心木是我们最后要介绍的玫瑰木的比较好的替代品，音性还是非常有个性, 价钱也便宜。不少电吉他的琴身也用桃花心木为材质。它的音色温暖而富低频, 因而被PRS及Gibson等公司大量使用。枫木的音色实在太亮, 所以你大概看不见以Maple用做琴身的吉他(木吉他除外)。大部份的用法是和其它的材料和并做琴身用。例如PRS及Gibson就常用桃花心木的琴身, 再加上枫木于表面。&lt;/p&gt;

&lt;p&gt;看下图的桃花心木的家具，木纹也非常的漂亮。
&lt;img src=&quot;/images/guitarmaterial/mahogany.jpg&quot; title=&quot;桃花心木 Mahogany&quot; alt=&quot;桃花心木 Mahogany&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;玫瑰木(俗称：紫檀，Rosewood)&lt;/h3&gt;

&lt;p&gt;玫瑰木的音性饱满,低音浑厚,高音悦耳,又不会太亮。在木吉他方面,则常被用来做侧面及背面的共鸣板。当然你可能会问,即然Rosewood那么好,为何没有以它做为琴身的电吉他。其原因乃Rosewood实在太重,而价钱昂贵罢。事实上,世界上最好的Rosewood产自巴西。很不幸的是,由于森林日渐减少,其价格亦扶摇直上。有不少制造者因而转用北美或别地区的Rosewood，但它们的音性与产自巴西的有相当差别。&lt;/p&gt;

&lt;p&gt;紫檀木的家具非常昂贵，做成的吉他同样价值不菲，最好巴西玫瑰木有钱也不一定买的到了，看看图解解馋吧：
&lt;img src=&quot;/images/guitarmaterial/brazilian-rosewood.jpg&quot; title=&quot;巴西玫瑰木&quot; alt=&quot;Brazilian Rosewood&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里还有一个帖子&lt;a href=&quot;http://bbs.guitarchina.com/viewthread.php?tid=922086&quot;&gt;【一支1970年巴西玫瑰木Martin的重生】&lt;/a&gt;，讲述给一把巴西玫瑰木背板的木吉他换了全部配件的过程，挺有趣的。&lt;/p&gt;

&lt;h3&gt;面板制作工艺&lt;/h3&gt;

&lt;p&gt;关于吉他面板，有一段不错的视频，可以看看，你会了解更多的制作工艺。&lt;/p&gt;

&lt;table align=&quot;center&quot; style=&quot;margin-bottom:30px;&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMzM2NDUzNzMy/v.swf&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;400&quot; align=&quot;middle&quot; allowScriptAccess=&quot;sameDomain&quot; allowFullscreen=&quot;true&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;


&lt;p&gt;视频中有一些点简单记录如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;有些朋友觉得单板就是一整块的木板，其实这是错误的认识。吉他的面板一般采用上下对剖，然后对称拼接。所以，单板的吉他，左右的木材纹路是对称的，就算是木材扭曲的部分，同样对称。&lt;/li&gt;
&lt;li&gt;吉他面板因为日照的不同，会有左右两边颜色有偏差的情况发生，这是正常的现象。&lt;/li&gt;
&lt;li&gt;吉他面板的纹路可以分为：普通的木材纹路，具备横纹的吉他面板，有少许木纹疙瘩的面板，斑点很多并产生了**熊爪纹**的面板。&lt;/li&gt;
&lt;li&gt;有横纹的吉他面板，跟木材本身有关，也跟木材切割技术有关，一般来说，横纹面板的比普通纹路的音色更加细腻，发散性更好，对手指演奏的捕捉能力更强。&lt;/li&gt;
&lt;li&gt;有少许木纹疙瘩的面板存在下的吉他，由于木材生长时候，部分枝干弯曲而产生，木材密度较高，对演奏力度的反馈大，音色力量感较好；&lt;/li&gt;
&lt;li&gt;“熊爪纹”的面板存在下的吉他，由于木材生长时，部分位置反复弯曲，产生了类似熊爪的斑点，此类吉他的特点：木材密度很高，对演奏力度的反馈能力非常好，音色力量感绝佳。好的手工吉他制作家能够根据面板的打磨，厚度的调整，制作出音色绝佳的吉他！这也是手工吉他的精髓所在！根据不同的材质打磨出更完美的音色需求！&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;下面还有一段花絮：&lt;/p&gt;

&lt;table align=&quot;center&quot; style=&quot;margin-bottom:30px;&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMzM3MzI4NDA4/v.swf&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;400&quot; align=&quot;middle&quot; allowScriptAccess=&quot;sameDomain&quot; allowFullscreen=&quot;true&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;


&lt;h2&gt;吉他品牌初识&lt;/h2&gt;

&lt;p&gt;对于吉他来说，大品牌的优势显而易见，品质的保证，价值的保证，都是我们选择大品牌的初衷。我的一点建议是，如果你确实想认真的学习吉他，一把好琴不可或缺，即使一开始资金不充裕，可以考虑大品牌的二手琴，价格合理，即使要换琴的时候再出手，也不会损失太多，我认为这是性价比最高的选择了。&lt;/p&gt;

&lt;p&gt;对于民谣吉他来说，大品牌无非就是&lt;a href=&quot;http://www.taylorguitars.com/&quot;&gt;Taylor&lt;/a&gt;，&lt;a href=&quot;http://www.martinguitar.com/&quot;&gt;Margin&lt;/a&gt;，&lt;a href=&quot;http://www.gibson.com&quot;&gt;Gibson&lt;/a&gt;之类，价格区间的跨度也比较大，根据自己的需要和承受能力来选择一款，可以经常逛逛&lt;a href=&quot;http://bbs.guitarchina.com/forum-101-1.html&quot;&gt;吉他中国的二手交易区&lt;/a&gt;，看看不同的二手琴的成色与价格，做到心里有数。&lt;/p&gt;

&lt;p&gt;各大品牌的官网一般都有比较详细的产品目录，也会有相应的价格，这个是&lt;a href=&quot;http://www.taylorguitars.com/guitars/PriceList_2011.pdf&quot;&gt;Taylor的2011年的价格表&lt;/a&gt;，一般查价格也可以去&lt;a href=&quot;http://www.amazon.com&quot;&gt;亚马逊&lt;/a&gt;或者&lt;a href=&quot;http://www.ebay.com&quot;&gt;ebay&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;Taylor&lt;/h3&gt;

&lt;p&gt;我购买之前通过对比了下Taylor和Martin的手感和音色，最终选择了Taylor，国内的&lt;a href=&quot;http://www.mingwumusic.com/&quot;&gt;名屋音乐&lt;/a&gt;提供很多品牌琴的试听，这种在线试听虽不是最好的方式，但是也能听出个大概，有一点点印象。最终还是要实际感受才行。&lt;/p&gt;

&lt;p&gt;Taylor在艺人中也比较受欢迎，我随手查了下，普通型号的使用也很常见：
&lt;img src=&quot;/images/guitarmaterial/zhangzhenyue315.jpg&quot; title=&quot;张震岳 Taylor 315CE&quot; alt=&quot;张震岳&quot; /&gt;&lt;/p&gt;

&lt;p&gt;张震岳用的是Taylor的315CE，而曾轶可可可用的是Taylor 214CE：
&lt;img src=&quot;/images/guitarmaterial/zengyike214.jpg&quot; title=&quot;曾轶可 Taylor 214CE&quot; alt=&quot;曾轶可&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Taylor的型号中，一般的命名是三位数字，当然也有其他系列的，三位数字中首位数字从小到大，表示品质依次增高，1、2系是入门系列，面板是单板，背板是合板，使用普通的Taylor拾音系统，价格比较便宜，人民币不会过万，从3系开始都是全单琴，档次不同，使用木材也不同，吉他中国上这篇帖子对&lt;a href=&quot;http://bbs.guitarchina.com/thread-749709-1-4.html&quot;&gt;Taylor全系列&lt;/a&gt;有个详细的介绍（中文的），不过图片显示有问题，也有人转载过：&lt;a href=&quot;http://blog.sina.com.cn/s/blog_6b728f0b0100l453.html&quot;&gt;Taylor不完整手册&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;Lee Guitar&lt;/h3&gt;

&lt;p&gt;谈到吉他品牌，就不得不提一下李宗盛的&lt;a href=&quot;http://www.leeguitars.com/&quot;&gt;Lee Guitar&lt;/a&gt;，李宗盛在音乐上的成就自不必说，成功者的成功的品质用在各行各业，都不会太差，李宗盛做的吉他，用料讲究，做工精致，港台的一线明星很多都在使用：纵贯线、周华健、朴树、陈绮贞、五月天等等。真是有钱也不一定买得到手工定制款。
&lt;img src=&quot;/images/guitarmaterial/leeguitar.jpg&quot; title=&quot;Lee Guitar&quot; alt=&quot;Lee Guitar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;关于Lee Guitar还有两篇文章可以参考：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.xiami.com/group/thread-detail/tid/10921&quot;&gt;李宗盛和他的琴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_4b66ade80100bqoi.html&quot;&gt;阿信：LeeGuitar有关吉他迷人的一切&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;下面这段视频是纵贯线在春晚上的表演，使用的就是Lee Guitar：&lt;/p&gt;

&lt;table align=&quot;center&quot; style=&quot;margin-bottom:30px;&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;embed src=&quot;http://www.tudou.com/v/R6K98aQSuq0/&amp;resourceId=0_05_05_99/v.swf&quot; type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; wmode=&quot;opaque&quot; width=&quot;480&quot; height=&quot;400&quot;&gt;&lt;/embed&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;


&lt;h2&gt;吉他琴弦与保养&lt;/h2&gt;

&lt;p&gt;琴弦对于吉他音色的影响也非常大，中档的琴配几块钱的弦就太说不过去了，经过对比和试用，我最终选择了Elixir的琴弦，他的琴弦比一般的弦会稍贵一些，但是更加的经久耐用，音色也很不错，Taylor新琴出厂就是Elixir的弦。看看我的换弦手艺，还不错吧：
&lt;img src=&quot;/images/guitarmaterial/mystring.jpg&quot; title=&quot;My Taylor&quot; alt=&quot;My Taylor&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Elixir&lt;/h3&gt;

&lt;p&gt;Elixir琴弦材质分两种：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;P系列是POLYWEB，代表标准厚度涂层，大多是80/20 bronze（青铜材质）声音偏亮&lt;/li&gt;
&lt;li&gt;N系列就是NANOWEB，代表超薄涂层，有phosphor bronze（磷铜材质）可以选择，声音温暖&lt;/li&gt;
&lt;li&gt;盒装的包装上如果标有with ANTI-RUST这种字样代表一二弦都加了防锈，没有则是只有三四五六有防锈&lt;/li&gt;
&lt;li&gt;不建议买散装，原因复杂，也不好辨别，找可信的店铺买盒装吧&lt;/li&gt;
&lt;li&gt;011的弦属轻质琴弦，中档一点的民谣吉他最好使用012型号的，012才是民谣吉他的标准张力。玩指弹甚至有用013、014这种高张力的型号&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;保养和换弦&lt;/h3&gt;

&lt;p&gt;关于吉他的保养，找到了个视频，很具体详细，是Taylor的专家录制的：&lt;/p&gt;

&lt;table align=&quot;center&quot; style=&quot;margin-bottom:30px;&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMjQxNDM0OTYw/v.swf&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;400&quot; align=&quot;middle&quot; allowScriptAccess=&quot;sameDomain&quot; allowFullscreen=&quot;true&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;




&lt;table align=&quot;center&quot; style=&quot;margin-bottom:30px;&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMjQxNDg2MDI4/v.swf&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;400&quot; align=&quot;middle&quot; allowScriptAccess=&quot;sameDomain&quot; allowFullscreen=&quot;true&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;


&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;还有一些国外论坛上的类似的帖子，国人翻译过来的，可以读一读：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.guitarchina.com/viewthread.php?tid=1112026&amp;amp;extra=page%3D14%26amp%3Bfilter%3Ddigest&quot;&gt;入门吉他选购以及品牌介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_606a5f730100ntiq.html&quot;&gt;吉他选择面面观(作者：John Schroeter)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;看完这篇博客，不知道对你认识和购买吉他有没有帮助，你也可以谈谈你的想法，多多交流罢。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>使用Github Pages建独立博客</title>
     <link href="http://beiyuu.com/github-pages"/>
     <updated>2012-02-22T00:00:00+08:00</updated>
     <id>http://beiyuu.com/github-pages</id>
     <content type="html">&lt;h1&gt;&lt;a href=&quot;/github-pages&quot; title=&quot;使用Github Pages建独立博客&quot;&gt;使用Github Pages建独立博客&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;2012-02-22 By &lt;a href=&quot;http://beiyuu.com/about&quot;&gt;BeiYuu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com&quot; title=&quot;Github&quot;&gt;Github&lt;/a&gt;很好的将代码和社区联系在了一起，于是发生了很多有趣的事情，世界也因为他美好了一点点。Github作为现在最流行的代码仓库，已经得到很多大公司和项目的青睐，比如&lt;a href=&quot;https://github.com/jquery/jquery&quot; title=&quot;jQuery@github&quot;&gt;jQuery&lt;/a&gt;、&lt;a href=&quot;https://github.com/twitter/bootstrap&quot; title=&quot;Twitter@github&quot;&gt;Twitter&lt;/a&gt;等。为使项目更方便的被人理解，介绍页面少不了，甚至会需要完整的文档站，Github替你想到了这一点，他提供了&lt;a href=&quot;http://pages.github.com/&quot; title=&quot;Github Pages&quot;&gt;Github Pages&lt;/a&gt;的服务，不仅可以方便的为项目建立介绍站点，也可以用来建立个人博客。&lt;/p&gt;

&lt;p&gt;Github Pages有以下几个优点：&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;轻量级的博客系统，没有麻烦的配置&lt;/li&gt;
    &lt;li&gt;使用标记语言，比如&lt;a href=&quot;http://markdown.tw&quot;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;无需自己搭建服务器&lt;/li&gt;
    &lt;li&gt;根据Github的限制，对应的每个站有300MB空间&lt;/li&gt;
    &lt;li&gt;可以绑定自己的域名&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;当然他也有缺点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用&lt;a href=&quot;https://github.com/mojombo/jekyll&quot; title=&quot;Jekyll&quot;&gt;Jekyll&lt;/a&gt;模板系统，相当于静态页发布，适合博客，文档介绍等。&lt;/li&gt;
&lt;li&gt;动态程序的部分相当局限，比如没有评论，不过还好我们有解决方案。&lt;/li&gt;
&lt;li&gt;基于Git，很多东西需要动手，不像Wordpress有强大的后台&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;大致介绍到此，作为个人博客来说，简洁清爽的表达自己的工作、心得，就已达目标，所以Github Pages是我认为此需求最完美的解决方案了。&lt;/p&gt;

&lt;h2&gt;购买、绑定独立域名&lt;/h2&gt;

&lt;p&gt;虽说&lt;a href=&quot;http://www.godaddy.com/&quot; title=&quot;Godaddy&quot;&gt;Godaddy&lt;/a&gt;曾支持过SOPA，并且首页放着极其不专业的大胸美女，但是作为域名服务商他做的还不赖，选择它最重要的原因是他支持支付宝，没有信用卡有时真的很难过。&lt;/p&gt;

&lt;p&gt;域名的购买不用多讲，注册、选域名、支付，有网购经验的都毫无压力，优惠码也遍地皆是。域名的配置需要提醒一下，因为伟大英明的GFW的存在，我们必须多做些事情。&lt;/p&gt;

&lt;p&gt;流传Godaddy的域名解析服务器被墙掉，导致域名无法访问，后来这个事情在&lt;a href=&quot;http://beiyuu.com&quot; title=&quot;BeiYuu&quot;&gt;BeiYuu&lt;/a&gt;也发生了，不得已需要把域名解析服务迁移到国内比较稳定的服务商处，这个迁移对于域名来说没有什么风险，最终的控制权还是在Godaddy那里，你随时都可以改回去。&lt;/p&gt;

&lt;p&gt;我们选择&lt;a href=&quot;https://www.dnspod.cn/&quot; title=&quot;DNSPod&quot;&gt;DNSPod&lt;/a&gt;的服务，他们的产品做得不错，易用、免费，收费版有更高端的功能，暂不需要。注册登录之后，按照DNSPod的说法，只需三步（我们插入一步）：&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;首先添加域名记录，可参考DNSPod的帮助文档：&lt;a href=&quot;https://www.dnspod.cn/Support&quot;&gt;https://www.dnspod.cn/Support&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;在DNSPod自己的域名下添加一条&lt;a href=&quot;http://baike.baidu.com/view/65575.htm&quot;&gt;A记录&lt;/a&gt;，地址就是Github Pages的服务IP地址：207.97.227.245&lt;/li&gt;
    &lt;li&gt;在域名注册商处修改DNS服务:去Godaddy修改Nameservers为这两个地址：f1g1ns1.dnspod.net、f1g1ns2.dnspod.net。如果你不明白在哪里修改，可以参考这里：&lt;a href=&quot;https://www.dnspod.cn/support/index/fid/119&quot;&gt;Godaddy注册的域名如何使用DNSPod&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;等待域名解析生效&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;域名的配置部分完成，跪谢方校长。&lt;/p&gt;

&lt;h2&gt;配置和使用Github&lt;/h2&gt;

&lt;p&gt;Git是版本管理的未来，他的优点我不再赘述，相关资料很多。推荐这本&lt;a href=&quot;http://progit.org/book/zh/&quot; title=&quot;Pro Git中文版&quot;&gt;Git中文教程&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;要使用Git，需要安装它的客户端，推荐在Linux下使用Git，会比较方便。Windows版的下载地址在这里：&lt;a href=&quot;http://code.google.com/p/msysgit/downloads/list&quot; title=&quot;Windows版Git客户端&quot;&gt;http://code.google.com/p/msysgit/downloads/list&lt;/a&gt;。其他系统的安装也可以参考官方的&lt;a href=&quot;http://help.github.com/mac-set-up-git/&quot; title=&quot;Mac下Git安装&quot;&gt;安装教程&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;下载安装客户端之后，各个系统的配置就类似了，我们使用windows作为例子，Linux和Mac与此类似。&lt;/p&gt;

&lt;p&gt;在Windows下，打开Git Bash，其他系统下面则打开终端（Terminal）：
&lt;img src=&quot;/images/githubpages/bootcamp_1_win_gitbash.jpg&quot; alt=&quot;Git Bash&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;1、检查SSH keys的设置&lt;/h3&gt;

&lt;p&gt;首先我们需要检查你电脑上现有的ssh key：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/.ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果显示“No such file or directory”，跳到第三步，否则继续。&lt;/p&gt;

&lt;h3&gt;2、备份和移除原来的ssh key设置：&lt;/h3&gt;

&lt;p&gt;因为已经存在key文件，所以需要备份旧的数据并删除：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls
config  id_rsa  id_rsa.pub  known_hosts
$ mkdir key_backup
$ cp id_rsa* key_backup
$ rm id_rsa*
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;3、生成新的SSH Key：&lt;/h3&gt;

&lt;p&gt;输入下面的代码，就可以生成新的key文件，我们只需要默认设置就好，所以当需要输入文件名的时候，回车就好。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot;
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&amp;lt;回车就好&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后系统会要你输入加密串（&lt;a href=&quot;http://help.github.com/ssh-key-passphrases/&quot;&gt;Passphrase&lt;/a&gt;）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Enter passphrase (empty for no passphrase):&amp;lt;输入加密串&amp;gt;
Enter same passphrase again:&amp;lt;再次输入加密串&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后看到这样的界面，就成功设置ssh key了：
&lt;img src=&quot;/images/githubpages/ssh-key-set.png&quot; alt=&quot;ssh key success&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;4、添加SSH Key到GitHub：&lt;/h3&gt;

&lt;p&gt;在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。&lt;/p&gt;

&lt;p&gt;用文本编辑工具打开id_rsa.pub文件，如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。&lt;/p&gt;

&lt;p&gt;在GitHub的主页上点击设置按钮：
&lt;img src=&quot;/images/githubpages/github-account-setting.png&quot; alt=&quot;github account setting&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择SSH Keys项，把复制的内容粘贴进去，然后点击Add Key按钮即可：
&lt;img src=&quot;/images/githubpages/bootcamp_1_ssh.jpg&quot; alt=&quot;set ssh keys&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PS：如果需要配置多个GitHub账号，可以参看这个&lt;a href=&quot;http://omiga.org/blog/archives/2269&quot;&gt;多个github帐号的SSH key切换&lt;/a&gt;，不过需要提醒一下的是，如果你只是通过这篇文章中所述配置了Host，那么你多个账号下面的提交用户会是一个人，所以需要通过命令&lt;code&gt;git config --global --unset user.email&lt;/code&gt;删除用户账户设置，在每一个repo下面使用&lt;code&gt;git config --local user.email '你的github邮箱@mail.com'&lt;/code&gt; 命令单独设置用户账户信息&lt;/p&gt;

&lt;h3&gt;5、测试一下&lt;/h3&gt;

&lt;p&gt;可以输入下面的命令，看看设置是否成功，&lt;code&gt;git@github.com&lt;/code&gt;的部分不要修改：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是下面的反应：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The authenticity of host 'github.com (207.97.227.239)' can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不要紧张，输入&lt;code&gt;yes&lt;/code&gt;就好，然后会看到：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hi &amp;lt;em&amp;gt;username&amp;lt;/em&amp;gt;! You've successfully authenticated, but GitHub does not provide shell access.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;6、设置你的账号信息&lt;/h3&gt;

&lt;p&gt;现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。&lt;/p&gt;

&lt;p&gt;Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git config --global user.name &quot;你的名字&quot;
$ git config --global user.email &quot;your_email@youremail.com&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;设置GitHub的token&lt;/h4&gt;

&lt;p&gt;2012-4-28补充：新版的接口已经不需要配置token了，所以下面这段可以跳过了&lt;/p&gt;

&lt;p&gt;有些工具没有通过SSH来链接GitHub。如果要使用这类工具，你需要找到然后设置你的API Token。&lt;/p&gt;

&lt;p&gt;在GitHub上，你可以点击&lt;em&gt;Account Setting &gt; Account Admin&lt;/em&gt;：
&lt;img src=&quot;/images/githubpages/bootcamp_1_token.jpg&quot; alt=&quot;set ssh keys&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后在你的命令行中，输入下面的命令，把token添加进去：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git config --global user.name &quot;你的名字&quot;
$ git config --global user.token 0123456789your123456789token
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你改了GitHub的密码，需要重新设置token。&lt;/p&gt;

&lt;h3&gt;成功了&lt;/h3&gt;

&lt;p&gt;好了，你已经可以成功连接GitHub了。&lt;/p&gt;

&lt;h2&gt;使用GitHub Pages建立博客&lt;/h2&gt;

&lt;p&gt;与GitHub建立好链接之后，就可以方便的使用它提供的Pages服务，GitHub Pages分两种，一种是你的GitHub用户名建立的&lt;code&gt;username.github.com&lt;/code&gt;这样的用户&amp;amp;组织页（站），另一种是依附项目的pages。&lt;/p&gt;

&lt;h3&gt;User &amp;amp; Organization Pages&lt;/h3&gt;

&lt;p&gt;想建立个人博客是用的第一种，形如&lt;code&gt;beiyuu.github.com&lt;/code&gt;这样的可访问的站，每个用户名下面只能建立一个，创建之后点击&lt;code&gt;Admin&lt;/code&gt;进入项目管理，可以看到是这样的：
&lt;img src=&quot;/images/githubpages/user-pages.png&quot; alt=&quot;user pages&quot; /&gt;
而普通的项目是这样的，即使你也是用的&lt;code&gt;othername.github.com&lt;/code&gt;：
&lt;img src=&quot;/images/githubpages/other-pages.png&quot; alt=&quot;other pages&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建好&lt;code&gt;username.github.com&lt;/code&gt;项目之后，提交一个&lt;code&gt;index.html&lt;/code&gt;文件，然后&lt;code&gt;push&lt;/code&gt;到GitHub的&lt;code&gt;master&lt;/code&gt;分支（也就是普通意义上的主干）。第一次页面生效需要一些时间，大概10分钟左右。&lt;/p&gt;

&lt;p&gt;生效之后，访问&lt;code&gt;username.github.com&lt;/code&gt;就可以看到你上传的页面了，&lt;a href=&quot;http://beiyuu.github.com&quot;&gt;beiyuu.github.com&lt;/a&gt;就是一个例子。&lt;/p&gt;

&lt;p&gt;关于第二种项目&lt;code&gt;pages&lt;/code&gt;，简单提一下，他和用户pages使用的后台程序是同一套，只不过它的目的是项目的帮助文档等跟项目绑定的内容，所以需要在项目的&lt;code&gt;gh-pages&lt;/code&gt;分支上去提交相应的文件，GitHub会自动帮你生成项目pages。具体的使用帮助可以参考&lt;a href=&quot;http://pages.github.com/&quot; title=&quot;Github Pages&quot;&gt;Github Pages&lt;/a&gt;的官方文档：&lt;/p&gt;

&lt;h3&gt;绑定域名&lt;/h3&gt;

&lt;p&gt;我们在第一部分就提到了在DNS部分的设置，再来看在GitHub的配置，要想让&lt;code&gt;username.github.com&lt;/code&gt;能通过你自己的域名来访问，需要在项目的根目录下新建一个名为&lt;code&gt;CNAME&lt;/code&gt;的文件，文件内容形如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;beiyuu.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你也可以绑定在二级域名上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog.beiyuu.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要提醒的一点是，如果你使用形如&lt;code&gt;beiyuu.com&lt;/code&gt;这样的一级域名的话，需要在DNS处设置A记录到&lt;code&gt;207.97.227.245&lt;/code&gt;，而不是在DNS处设置为CNAME的形式，否则可能会对其他服务（比如email）造成影响。&lt;/p&gt;

&lt;p&gt;设置成功后，根据DNS的情况，最长可能需要一天才能生效，耐心等待吧。&lt;/p&gt;

&lt;h2&gt;Jekyll模板系统&lt;/h2&gt;

&lt;p&gt;GitHub Pages为了提供对HTML内容的支持，选择了&lt;a href=&quot;https://github.com/mojombo/jekyll&quot; title=&quot;Jekyll&quot;&gt;Jekyll&lt;/a&gt;作为模板系统，Jekyll是一个强大的静态模板系统，作为个人博客使用，基本上可以满足要求，也能保持管理的方便，你可以查看&lt;a href=&quot;https://github.com/mojombo/jekyll/blob/master/README.textile&quot;&gt;Jekyll官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;你可以直接fork&lt;a href=&quot;https://github.com/beiyuu/beiyuu.github.com&quot;&gt;我的项目&lt;/a&gt;，然后改名，就有了你自己的满足Jekyll要求的文档了，当然你也可以按照下面的介绍自己创建。&lt;/p&gt;

&lt;h3&gt;Jekyll基本结构&lt;/h3&gt;

&lt;p&gt;Jekyll的核心其实就是一个文本的转换引擎，用你最喜欢的标记语言写文档，可以是Markdown、Textile或者HTML等等，再通过&lt;code&gt;layout&lt;/code&gt;将文档拼装起来，根据你设置的URL规则来展现，这些都是通过严格的配置文件来定义，最终的产出就是web页面。&lt;/p&gt;

&lt;p&gt;基本的Jekyll结构如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   `-- post.html
|-- _posts
|   |-- 2007-10-29-why-every-programmer-should-play-nethack.textile
|   `-- 2009-04-26-barcamp-boston-4-roundup.textile
|-- _site
`-- index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;简单介绍一下他们的作用：&lt;/p&gt;

&lt;h4&gt;_config.yml&lt;/h4&gt;

&lt;p&gt;配置文件，用来定义你想要的效果，设置之后就不用关心了。&lt;/p&gt;

&lt;h4&gt;_includes&lt;/h4&gt;

&lt;p&gt;可以用来存放一些小的可复用的模块，方便通过&lt;code&gt;{ % include file.ext %}&lt;/code&gt;（去掉前两个{中或者{与%中的空格，下同）灵活的调用。这条命令会调用_includes/file.ext文件。&lt;/p&gt;

&lt;h4&gt;_layouts&lt;/h4&gt;

&lt;p&gt;这是模板文件存放的位置。模板需要通过&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;YAML front matter&lt;/a&gt;来定义，后面会讲到，&lt;code&gt;{ { content }}&lt;/code&gt;标记用来将数据插入到这些模板中来。&lt;/p&gt;

&lt;h4&gt;_posts&lt;/h4&gt;

&lt;p&gt;你的动态内容，一般来说就是你的博客正文存放的文件夹。他的命名有严格的规定，必须是&lt;code&gt;2012-02-22-artical-title.MARKUP&lt;/code&gt;这样的形式，MARKUP是你所使用标记语言的文件后缀名，根据_config.yml中设定的链接规则，可以根据你的文件名灵活调整，文章的日期和标记语言后缀与文章的标题的独立的。&lt;/p&gt;

&lt;h4&gt;_site&lt;/h4&gt;

&lt;p&gt;这个是Jekyll生成的最终的文档，不用去关心。最好把他放在你的&lt;code&gt;.gitignore&lt;/code&gt;文件中忽略它。&lt;/p&gt;

&lt;h4&gt;其他文件夹&lt;/h4&gt;

&lt;p&gt;你可以创建任何的文件夹，在根目录下面也可以创建任何文件，假设你创建了&lt;code&gt;project&lt;/code&gt;文件夹，下面有一个&lt;code&gt;github-pages.md&lt;/code&gt;的文件，那么你就可以通过&lt;code&gt;yoursite.com/project/github-pages&lt;/code&gt;访问的到，如果你是使用一级域名的话。文件后缀可以是&lt;code&gt;.html&lt;/code&gt;或者&lt;code&gt;markdown&lt;/code&gt;或者&lt;code&gt;textile&lt;/code&gt;。这里还有很多的例子：&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Sites&quot;&gt;https://github.com/mojombo/jekyll/wiki/Sites&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Jekyll的配置&lt;/h3&gt;

&lt;p&gt;Jekyll的配置写在_config.yml文件中，可配置项有很多，我们不去一一追究了，很多配置虽有用但是一般不需要去关心，&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/configuration&quot;&gt;官方配置文档&lt;/a&gt;有很详细的说明，确实需要了可以去这里查，我们主要说两个比较重要的东西，一个是&lt;code&gt;Permalink&lt;/code&gt;，还有就是自定义项。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Permalink&lt;/code&gt;项用来定义你最终的文章链接是什么形式，他有下面几个变量：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt; 文件名中的年份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;month&lt;/code&gt; 文件名中的月份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;day&lt;/code&gt; 文件名中的日期&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt; 文件名中的文章标题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;categories&lt;/code&gt; 文章的分类，如果文章没有分类，会忽略&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i-month&lt;/code&gt; 文件名中的除去前缀0的月份&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i-day&lt;/code&gt; 文件名中的除去前缀0的日期&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;看看最终的配置效果：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink: pretty&lt;/code&gt; /2009/04/29/slap-chop/index.html&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permalink: /:month-:day-:year/:title.html&lt;/code&gt; /04-29-2009/slap-chop.html&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permalink: /blog/:year/:month/:day/:title&lt;/code&gt; /blog/2009/04/29/slap-chop/index.html&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;我使用的是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink: /:title&lt;/code&gt; /github-pages&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;自定义项的内容，例如我们定义了&lt;code&gt;title:BeiYuu的博客&lt;/code&gt;这样一项，那么你就可以在文章中使用&lt;code&gt;{ { site.title }}&lt;/code&gt;来引用这个变量了，非常方便定义些全局变量。&lt;/p&gt;

&lt;h3&gt;YAML Front Matter和模板变量&lt;/h3&gt;

&lt;p&gt;对于使用YAML定义格式的文章，Jekyll会特别对待，他的格式要求比较严格，必须是这样的形式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
title: Blogging Like a Hacker
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;前后的&lt;code&gt;---&lt;/code&gt;不能省略，在这之间，你可以定一些你需要的变量，layout就是调用&lt;code&gt;_layouts&lt;/code&gt;下面的某一个模板，他还有一些其他的变量可以使用：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;permalink&lt;/code&gt; 你可以对某一篇文章使用通用设置之外的永久链接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;published&lt;/code&gt; 可以单独设置某一篇文章是否需要发布&lt;/li&gt;
&lt;li&gt;&lt;code&gt;category&lt;/code&gt; 设置文章的分类&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tags&lt;/code&gt; 设置文章的tag&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;上面的&lt;code&gt;title&lt;/code&gt;就是自定义的内容，你也可以设置其他的内容，在文章中可以通过&lt;code&gt;{ { page.title }}&lt;/code&gt;这样的形式调用。&lt;/p&gt;

&lt;p&gt;模板变量，我们之前也涉及了不少了，还有其他需要的变量，可以参考官方的文档：&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/template-data&quot; title=&quot;Jekyll Template Data&quot;&gt;https://github.com/mojombo/jekyll/wiki/template-data&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;使用Disqus管理评论&lt;/h2&gt;

&lt;p&gt;模板部分到此就算是配置完毕了，但是Jekyll只是个静态页面的发布系统，想做到关爽场倒是很容易，如果想要评论呢？也很简单。&lt;/p&gt;

&lt;p&gt;现在专做评论模块的产品有很多，比如&lt;a href=&quot;http://disqus.com/&quot;&gt;Disqus&lt;/a&gt;，还有国产的&lt;a href=&quot;http://duoshuo.com/&quot;&gt;多说&lt;/a&gt;，Disqus对现在各种系统的支持都比较全面，到写博客为止，多说现在仅是WordPress的一个插件，所以我这里暂时也使用不了，多说与国内的社交网络紧密结合，还是有很多亮点的，值得期待一下。我先选择了Disqus。&lt;/p&gt;

&lt;p&gt;注册账号什么的就不提了，Disqus支持很多的博客平台，参见下图：
&lt;img src=&quot;/images/githubpages/disqus-site.jpg&quot; alt=&quot;Disqus sites&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们选择最下面的&lt;code&gt;Universal Code&lt;/code&gt;就好，然后会看到一个介绍页面，把下面这段代码复制到你的模板里面，可以只复制到显示文章的模板中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&quot;disqus_thread&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'example'; // required: replace example with your forum shortname 这个地方需要改成你配置的网站名

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
&amp;lt;/script&amp;gt;
&amp;lt;noscript&amp;gt;Please enable JavaScript to view the &amp;lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;
&amp;lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&amp;gt;blog comments powered by &amp;lt;span class=&quot;logo-disqus&quot;&amp;gt;Disqus&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置完之后，你也可以做一些异步加载的处理，提高性能，比如我就在最开始页面打开的时候不显示评论，当你想看评论的时候，点击“显示评论”再加载Disqus的模块。代码很简单，你可以参考我的写法。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$('#disqus_container .comment').on('click',function(){
        $(this).html('加载中...');
        var disqus_shortname = 'beiyuu';
        var that = this;
        BYB.includeScript('http://' + disqus_shortname + '.disqus.com/embed.js',function(){$(that).remove()}); //这是一个加载js的函数
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你不喜欢Disqus的样式，你也可以根据他生成的HTML结构，自己改写样式覆盖它的，Disqus现在也提供每个页面的评论数接口，&lt;a href=&quot;http://docs.disqus.com/developers/universal/&quot;&gt;帮助文档&lt;/a&gt;在这里可以看到。&lt;/p&gt;

&lt;h2&gt;代码高亮插件&lt;/h2&gt;

&lt;p&gt;如果写技术博客，代码高亮少不了，有两个可选插件&lt;a href=&quot;http://mihai.bazon.net/projects/javascript-syntax-highlighting-engine&quot;&gt;DlHightLight代码高亮组件&lt;/a&gt;和&lt;a href=&quot;http://code.google.com/p/google-code-prettify/&quot;&gt;Google Code Prettify&lt;/a&gt;。DLHightLight支持的语言相对较少一些，有js、css、xml和html，Google的高亮插件基本上任何语言都支持，也可以自定义语言，也支持自动识别，也有行号的特别支持。&lt;/p&gt;

&lt;p&gt;Google的高亮插件使用也比较方便，只需要在&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;的标签上加入&lt;code&gt;prettyprint&lt;/code&gt;即可。所以我选择了Google Code Prettify。&lt;/p&gt;

&lt;h2&gt;搭建本地jekyll环境&lt;/h2&gt;

&lt;p&gt;这里主要介绍一下在Mac OS X下面的安装过程，其他操作系统可以参考官方的&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Install&quot;&gt;jekyll安装&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;作为生活在水深火热的墙内人民，有必要进行下面一步修改gem的源，方便我们更快的下载所需组建：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem sources --remove http://rubygems.org/ 
sudo gem sources -a http://ruby.taobao.org/ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后用Gem安装jekyll&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不过一般如果有出错提示，你可能需要这样安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo gem install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我到了这一步的时候总是提示错误&lt;code&gt;Failed to build gem native extension&lt;/code&gt;，很可能的一个原因是没有安装rvm，&lt;a href=&quot;https://rvm.io/rvm/install/&quot;&gt;rvm的安装&lt;/a&gt;可以参考这里，或者敲入下面的命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -L https://get.rvm.io | bash -s stable --ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后还需要安装Markdown的解释器，这个需要在你的_config.yml里面设置&lt;code&gt;markdown:rdiscount&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install jekyll rdiscount
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;好了，如果一切顺利的话，本地环境就基本搭建完成了，进入之前我们建立的博客目录，运行下面的命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ jekyll --server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个时候，你就可以通过&lt;code&gt;localhost:4000&lt;/code&gt;来访问了。还有关于&lt;a href=&quot;http://jekyllbootstrap.com/&quot;&gt;jekyll bootstrap&lt;/a&gt;的资料，需要自己修改调试的，可以研究一下。&lt;/p&gt;

&lt;p&gt;我在这个过程中还遇到两个诡异的没有解决的问题，一个是我放在根目录下面的blog.md等文件，在GitHub的pages服务上一切正常，可以通过&lt;code&gt;beiyuu.com/blog&lt;/code&gt;访问的到，但是在本地环境下，总是&lt;code&gt;not found&lt;/code&gt;，很是让人郁闷，看生成的&lt;code&gt;_site&lt;/code&gt;目录下面的文件，也是正常的&lt;code&gt;blog.html&lt;/code&gt;，但就是找不到，只有当我把URL改为&lt;code&gt;localhost:4000/blog.html&lt;/code&gt;的时候，才能访问的到，环境不同真糟糕。&lt;/p&gt;

&lt;p&gt;还有一个是关于&lt;code&gt;category&lt;/code&gt;的问题，根据&lt;code&gt;YAML&lt;/code&gt;的语法，我们在文章头部可以定义文章所属的类别，也可以定义为&lt;code&gt;category:[blog,rss]&lt;/code&gt;这样子的多类别，我在本地试一切正常，但是push到GitHub之后，就无法读取了，真让人着急，没有办法，只能采用别的办法满足我的需求了。这里还有一篇&lt;a href=&quot;http://chxt6896.github.com/blog/2012/02/13/blog-jekyll-native.html&quot;&gt;Jekyll 本地调试之若干问题&lt;/a&gt;，安装中如果有其他问题，也可以对照参考一下。&lt;/p&gt;

&lt;h2&gt;结语&lt;/h2&gt;

&lt;p&gt;如果你跟着这篇不那么详尽的教程，成功搭建了自己的博客，恭喜你！剩下的就是保持热情的去写自己的文章吧。&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>我为什么写博客？</title>
     <link href="http://beiyuu.com/why-blog"/>
     <updated>2011-12-18T00:00:00+08:00</updated>
     <id>http://beiyuu.com/why-blog</id>
     <content type="html">&lt;h1&gt;&lt;a href=&quot;/why-blog&quot; title=&quot;我为什么写博客？&quot;&gt;我为什么写博客？&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;2011-12-18 By &lt;a href=&quot;http://beiyuu.com/about&quot;&gt;BeiYuu&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;世界这么乱，装纯给谁看&lt;/h2&gt;

&lt;p&gt;写博客这个不知道几个“互联网世纪”前的东西，现在还有必要拿出来说吗？不想用太多的理论去说这个命题，先看看两个最近对我影响比较大的两个博客：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stevelosh.com/&quot; title=&quot;Steve Losh&quot;&gt;Steve Losh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sivers.org/&quot; title=&quot;Derek Sivers&quot;&gt;Derek Sivers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;第一个是&lt;a href=&quot;http://stevelosh.com/&quot; title=&quot;Steve Losh&quot;&gt;Steve Losh&lt;/a&gt;的博客，我在搜索了&lt;a href=&quot;http://stevelosh.com/blog/2011/09/writing-vim-plugins/&quot; title=&quot;Write Vim Plugins&quot;&gt;VIM&lt;/a&gt;相关的关键字之后被带到了这里。简洁的风格和关屏的利落就已经吸引了我，顺手点开其他的文章看了看，博主非常的谨慎认真，每一篇都是高质量的作品，看得出他的用心，整个网站也是异常的简洁舒适，深深的被这种淡然的心态打动，躲进小楼成一统，哪管他春夏与秋冬。再看看他的介绍：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&quot;I’m a programmer, photographer, dancer &amp;amp; bassist from Rochester, New York.&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;呵呵，他完全就过着我期望的生活。&lt;/p&gt;

&lt;p&gt;第二位博主的&lt;a href=&quot;http://sivers.org/sharing&quot; title=&quot;The co-op business model: share whatever you've got&quot;&gt;'Co-op Business Model'&lt;/a&gt;文章也是让我茅厕顿开，这种分享的精神，用博主自己活生生的例子讲述出来之后，读者自然会被感动的，我也在团队内分享过这篇文章，下面我简要介绍一下他的事迹吧：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1994年，他把需要邮寄才能得到的版权申请表单扫描上传到网上，为大家申请提供方便的下载服务，直到版权机构将表单上网之前，他的网站是全美唯一一个可以下载到表单的地方，他也并没有盈利。&lt;/li&gt;
&lt;li&gt;1995年，他为自己的乐队注册了一个名字，并且把注册过程详细的写在自己的博客上，很长一段时间内，他的这篇文章几乎成了注册乐队名称的标准教程。&lt;/li&gt;
&lt;li&gt;1996年，他有了一个&lt;a href=&quot;http://artificialrecords.com&quot;&gt;小唱片公司&lt;/a&gt;，也就有了一个条形码账户，他需要支付$750给条码协会，这样他就拥有了十万个条码，一开始他免费把这些条码给朋友们要出售的CD用，后来，越来越多人知道了他有条码，又懒得去自己申请账户，就给他付一定的费用，方便的使用，他每个收费$20，在过去的12年里，他靠出售这个条码就赚到了二百万美元。&lt;/li&gt;
&lt;li&gt;1997年，他花费$1000申请了一个信用卡商户账户，用来销售自己的CD，一开始也免费给他的做音乐的朋友们帮忙卖，后来有越来越多的陌生人希望能使用他的账号，省的自己去申请，因为他有一些劳动量，所以也收取一定费用，每张专辑收取$35的制作费，然后每卖一张收$4，在过去的12年中，他赚到了二千万美元。&lt;/li&gt;
&lt;li&gt;1999年，他学会了制作网站，一开始是为了展示自己的CD，后来他的朋友们抱怨自己的网站服务商很糟糕，希望能使用&lt;a href=&quot;http://sivers.org/&quot; title=&quot;Derek Sivers&quot;&gt;Derek Sivers&lt;/a&gt;的系统，因为也有一些劳动量，所以会一开始收取$300，然后每个月收取$20，在过去的9年中，他赚到了五百万美元。&lt;/li&gt;
&lt;li&gt;2000年以后，他会无偿的分享所有他学到的东西，或许“&lt;a href=&quot;http://sivers.org/below-average&quot; title=&quot;probably below average&quot;&gt;他不是最聪明的人&lt;/a&gt;”，但是分享没有什么成本，而且这是正确的事，所以在后来的11年里，他收获了很多的好运与快乐，遇见了很多有趣的人。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;找到了一个神交的外国博主，又有这么励志“好人好报”的故事，我想大道理不用讲太多也都明白了。&lt;/p&gt;

&lt;p&gt;还有一篇理论性很强的文章做参考，&lt;a href=&quot;http://www.cnblogs.com/bangerlee/archive/2011/09/11/2173632.html&quot; title=&quot;Why I Blog翻译版&quot;&gt;我为什么写博客&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;那些虚的没用，说点实际的&lt;/h2&gt;

&lt;p&gt;或许这些看起来很美好的东西，你会觉得离自己很远，那就说点直接的收益，看看是否够诱人。&lt;/p&gt;

&lt;p&gt;我还是先推荐一篇文章：&lt;a href=&quot;http://mindhacks.cn/2011/11/04/how-to-interview-a-person-for-two-years/&quot; title=&quot;怎样花两年时间去面试一个人&quot;&gt;怎样花两年时间去面试一个人&lt;/a&gt;，招聘永远是公司和个人的难题，双方的信息不对称，导致这个矛盾无法调和，这篇文章就是告诉你，如何自己去推销自己，让公司得到你的全部优质信息，尤其在现在的网络环境下，将自己工作有用的能力搬上网，那么就是最好的能力证明，就是最好的面试答案。无论你是程序员，还是设计师。&lt;/p&gt;

&lt;p&gt;或许你会想，好吧好吧，那我找个博客站开一个博客好了，我不太会同意这个做法，有一个个人的品牌，对于自己的发展只有好处，行走网络江湖，有同一个ID标识，无论在哪里都会让人看到你，这样长期的潜移默化，个人的品牌效力也就展现出来了。然后有一个自己独立的域名，并且用心去经营，肯定会有人欣赏的。而且经过我的一番研究，成本并不是很高。&lt;/p&gt;

&lt;p&gt;我期望的博客内容，并不是贴一段代码，或者胡言乱语两句，具体的质量可以参考&lt;a href=&quot;http://stevelosh.com/&quot; title=&quot;Steve Losh&quot;&gt;Steve Losh&lt;/a&gt;，这样的高质量，更能展现自己的态度，或许你说有一些小心得小点滴也想和大家分享，那也可以在自己的空间下开一个Wiki频道，专门存放琐碎的知识点。&lt;/p&gt;

&lt;p&gt;高质量的博文，肯定需要自己缜密的思考，并且需要一定的文笔才能将自己的想法完整清晰的表达出来，我在这两个方面都还差了很多，还需要大量的练习才好，给自己这样的机会。&lt;/p&gt;

&lt;p&gt;在快知识、微段子横行的今天，能对一个个问题深入的去思考，一方面得到的是心灵的平静，更多的则是深入思考之后的收获的喜悦感，会有不一样的体会的。&lt;/p&gt;

&lt;h2&gt;技术很简单，不用担心&lt;/h2&gt;

&lt;p&gt;或者你很幸运不是一个程序员，或者你是一个不用搞这些乱七八糟东西的程序员，那么相信我，你一样可以搭起来一个跟我的一模一样的个人站点的。&lt;/p&gt;

&lt;p&gt;我要特别鸣谢以下几个站点、技术：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://godaddy.com&quot; title=&quot;Godaddy&quot;&gt;GoDaddy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dnspod.cn&quot; title=&quot;DNSPod&quot;&gt;DNSPod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com&quot; title=&quot;Github:social coding&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://disqus.com&quot; title=&quot;Disqus&quot;&gt;Disqus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;下面我来做一个简要说明，完整的搭建方法，我后面会专门写一篇博客分享给大家，等不及的可以自己去找资料，&lt;sup&gt;_&lt;sup&gt;。&lt;/sup&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h3&gt;GoDaddy &amp;amp; DNSPod&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://godaddy.com&quot; title=&quot;Godaddy&quot;&gt;GoDaddy&lt;/a&gt;是一家非常不错的域名注册商，良好的用户体验，飞快的生效速度，给力的优惠码，也支持支付宝，永远不用担心国内那些流氓厂商的流氓行为，注册了域名，就可以放心不会被别人抢走。在Godaddy注册域名是一件很简单的事情，按照提示走就完全没有问题，唯一需要动脑筋的可能是，你要想一个既有个人标识，又没有被别人注册的域名了，我觉得我的&lt;a href=&quot;http://beiyuu.com&quot; title=&quot;BeiYuu&quot;&gt;BeiYuu&lt;/a&gt;还是不错的，呵呵。&lt;/p&gt;

&lt;p&gt;Godaddy一切都很完美，直到遇到了GFW，原因你肯定懂。前段时间推上风传Godaddy的DNS服务器被墙，导致域名不能解析，看起来好像自己的站被墙了一样，这个确实是个闹心的事情，还好国内有DNS服务的替代产品，而且做得还非常的不错，也是免费的，功能强大，速度快，不用担心被和谐，所以隆重推荐&lt;a href=&quot;http://dnspod.cn&quot; title=&quot;DNSPod&quot;&gt;DNSPod&lt;/a&gt;给大家，可以试用一下，把DNS服务迁移到DNSPod来，解决后顾之忧，配置比较简单，不懂的可以等我后面的博客啦，哈。&lt;/p&gt;

&lt;h3&gt;GitHub &amp;amp; Jekyll&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com&quot; title=&quot;Github:social coding&quot;&gt;GitHub&lt;/a&gt;是一个非常优秀的产品，爆发式的增长，各大优质开源软件的蜂涌而至，只能说明人们太需要他了。&lt;strong&gt;Social Coding&lt;/strong&gt;是他的Slogan，产品的设计确实解决了很多代码交流的难题，让世界更平，让交流更畅，关于Git的学习，大家可以移步这里&lt;a href=&quot;http://progit.org/book/zh/&quot; title=&quot;Pro Git&quot;&gt;Pro Git中文版&lt;/a&gt;，这也是一个本身就在Github维护的一个项目，高质量的翻译了Git入门书，讲解详细，是学习Git的好资料。&lt;/p&gt;

&lt;p&gt;GitHub是一个伟大的产品，&lt;a href=&quot;http://pages.github.com&quot; title=&quot;GitHub Pages&quot;&gt;GitHub Pages&lt;/a&gt;是他伟大的一部分，GitHub Pages基于&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;博客引擎，当我深入的研究了他之后，我深深的想给Jekyll的作者一个拥抱，列举一下Jekyll的优点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可以单独放在自己的服务器上，他也是GitHub Pages的基础，质量可靠&lt;/li&gt;
&lt;li&gt;将博客最重要的功能抽取出来，去除了&lt;a href=&quot;http://wordpress.org&quot; title=&quot;WordPress&quot;&gt;WordPress&lt;/a&gt;的复杂、烦躁的东西，一切都是清晰可控的&lt;/li&gt;
&lt;li&gt;可以方便的使用&lt;a href=&quot;http://markdown.tw/&quot; title=&quot;Markdown语法&quot;&gt;Markdown&lt;/a&gt;等其他标记语言
&lt;li&gt;清晰、简洁的文件组织，完美的永久链接方案，既漂亮、又可定制&lt;/li&gt;
&lt;li&gt;博客静态化，速度快&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;是完美的&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Disqus&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;都很不错，但是可能有些童鞋会不满意于他不提供评论功能，这个时候，&lt;a href=&quot;http://disqus.com&quot; title=&quot;Disqus&quot;&gt;Disqus&lt;/a&gt;的出现就显得是雪中送炭了。&lt;/p&gt;

&lt;p&gt;Disqus是一个社会化的评论解决方案，请允许我使用这个烂透了的词，调用它的接口非常简单，在自己的页面加载他的一段JS代码即可，如果别人注册了Disqus，那么就可以方便的留言，交流，一处登录，处处方便，而且Disqus也提供了一些spam等策略，不用自己操心了，并且可以和一些现有的博客系统很好的转换对接。越来越多的网站开始使用Disqus的服务了，这是一个非常不错的趋势，Jekyll配合&lt;a href=&quot;http://disqus.com&quot; title=&quot;Disqus&quot;&gt;Disqus&lt;/a&gt;实在是完美了。我别无所求了。&lt;/p&gt;

&lt;h2&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;写到这里，基本的点已经介绍完毕，看看Jekyll生成的博客页面，我心满意足，虽然文笔很烂，语句多不通顺，但是这是一个新的开始了，我觉得心灵都纯洁了不少，这不是发一条微博什么能带来的快乐。&lt;/p&gt;

&lt;p&gt;对于那些对上述技术不是很熟悉的童鞋来说，搭建起来可能还是需要花费些功夫的，我会在后面写一篇专门的教程，给有需要的人，等不及了的，可以自己研究下，&lt;strong&gt;生命在于折腾&lt;/strong&gt;。&lt;/p&gt;
</content>
   </entry>
   
 
</feed>
